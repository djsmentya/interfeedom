%h1
  = t('.order_list')
.column.span-6{:style =>'margin-bottom: 15px;'}
  %h3
    = Order.model_name.human
.column.span-11
  %h3
    = Product.model_name.human
- @orders_and_products.each do |key, value|
  -order = key
  -order_items = value
  .column{:style =>'border-right: 2px solid yellowGreen; border-bottom: 2px solid yellowGreen; margin: 5px; padding-bottom: 5px'}
    .column.span-6
      %label
        = t('.created')
      = l( order.created_at, :format =>:long )
      %br
      .column
        %label
          = t('.state')
      .clumn{:style => 'text-align:right;'}
        = label_tag t(order.state.to_sym), nil, :class => "status #{order.state}"
        %br
        - if order.payment_state.eql?('payed')
          = label_tag t(:payed), nil, :class => "status green"
        -else
          = label_tag t(:not_payed), nil, :class => "status red"
      -#%br
      -#%label
        -#Total price
      -#= order.price
    .column.span-11.last
      - order_items.each do |item|
        -product = item.product
        .row
          %hr
          .column.span-2
            = link_to image_tag(product.image.url(:thumb)), categoried_product_path(product)
          .column.span-4
            = product.name
          - quantity = item.quantity
          .column.span-2.right
            %label
              = t('.quantity')
            = quantity
            %label
              = t(:price)
            = product.price

-#%table
  %thead
    %th State
    %th Created
    %th Email
    %th Comment
  - @orders.each do |order|
    %tbody
      %td= order.state
      %td= order.created_at
      %td= order.email
      %td= order.comment
